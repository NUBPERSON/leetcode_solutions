class Solution {
public:
    vector<vector<int>>dir={{0,1},{1,0},{-1,0},{0,-1}};
     void dfs(vector<vector<char>>&board,int i,int j){
         board[i][j]='*';
         for(int k=0;k<4;k++){
             int x=i+dir[k][0];
             int y=j+dir[k][1];
             if(x>=0 && y>=0 && x<board.size() && y<board[0].size() &&board[x][y]=='O')
                 dfs(board,x,y);
         }
     }
    void solve(vector<vector<char>>& board) {
        for(int i=0;i<board.size();i++){
            if(board[i][0]=='O'){
                dfs(board,i,0);
            }
            if(board[i][board[0].size()-1]=='O'){
                dfs(board,i,board[0].size()-1);
            }
        }
        for(int j=0;j<board[0].size();j++){
            if(board[0][j]=='O'){
                dfs(board,0,j);
            }
            if(board[board.size()-1][j]=='O'){
                dfs(board,board.size()-1,j);
                           }
                           
        }
    
           for(int i=0;i<board.size();i++){
                for(int j=0;j<board[0].size();j++){
                  if(board[i][j]=='*')
                      board[i][j]='O';
                  else
                      board[i][j]='X';
                }
           }
                           
    }
};