class Solution {
public:
    vector<vector<int>>dir={{1,0},{0,1},{-1,0},{0,-1}};
    bool helper(vector<vector<char>>&board,int i,int j,string &w,int k, vector<vector<int>>&vis){
        if(k==w.size()){
            //cout<<"&l";
            return true;}
        //cout<<i<<" "<<j<<endl;
        bool ans=false;
        for(int q=0;q<4;q++){
            int x=i+dir[q][0];
            int y=j+dir[q][1];
            
            if(x>=0 && y>=0 && x<board.size() && y<board[0].size() && board[x][y]==w[k]&vis[x][y]==0){ 
                vis[x][y]=1;
                ans=ans||helper(board,x,y,w,k+1,vis);
                vis[x][y]=0;
            }
        }
        return ans;
    }
    bool exist(vector<vector<char>>& board, string w) {
        bool ans=false;
        vector<vector<int>>vis(board.size(),vector<int>(board[0].size(),0));
        for(int i=0;i<board.size();i++){
            for(int j=0;j<board[0].size();j++){
                if(board[i][j]==w[0]){
                    vis[i][j]=1;
                ans=ans||helper(board,i,j,w,1,vis);
                    vis[i][j]=0;
                }
                
            }
        }
        return ans;
    }
};