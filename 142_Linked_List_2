/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode* head) {
        ListNode *fast=head;
        ListNode *slow=head;
        int z=1;
        while(fast!=NULL && fast->next!=NULL && (fast!=slow || z==1) ){
            slow=slow->next;
            fast=fast->next->next;
            z=0;
              
         }
        if(fast==NULL || fast->next==NULL)
            return NULL;
        //cout<<fast->val;
        while(head!=slow){
            head=head->next;
            slow=slow->next;
        }
        return head;
    }
};