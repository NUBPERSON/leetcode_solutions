class Solution {
public:
    vector<vector<int>>dir={{1,0},{0,1},{-1,0},{0,-1}};
    int helper(vector<vector<int>>&grid,int i,int j,int cnt,int now){
        if(grid[i][j]==2){
            
            if(cnt==now+1)
              return 1;
            return 0;
        }
        int a=grid[i][j];
        grid[i][j]=-1;
        
        int ans=0;
        for(int k=0;k<4;k++){
            int x=i+dir[k][0];
            int y=j+dir[k][1];
            if(x>=0 && y>=0 && x<grid.size() && y<grid[0].size() && grid[x][y]!=-1){
                ans+=helper(grid,x,y,cnt,now+1);
            }
        }
       
        grid[i][j]=a;
        return ans;
    }
    int uniquePathsIII(vector<vector<int>>& grid) {
        int cnt=0;
        for(int i=0;i<grid.size();i++){
          for(int j=0;j<grid[0].size();j++){
              if(grid[i][j]==0)
                  cnt++;
          }}
      for(int i=0;i<grid.size();i++){
          for(int j=0;j<grid[0].size();j++){
              if(grid[i][j]==1)
              return helper(grid,i,j,cnt+2,0); 
          }
      }  
       return 0;
    }
};